import streamlit as st
import matplotlib.pyplot as plt
import seaborn as sns

st.set_page_config(page_title="Описание предметной области и данных", layout="wide")
st.title("Описание датасета — стоимости машин")

st.markdown("""
Данные представляют собой набор информации о характеристиках машин. Цель — прогнозирование цены автомобилей (`price_usd`) . Датасет содержит как числовые, так и категориальные данные, закодированные с помощью one-hot encoding.
""")

st.header("Структура датасета")

data_description = {
    "manufacturer_name" : "Название производителя автомобиля", 
    "model_name":"Модель автомобиля",
    "transmission": "Тип трансмиссии (например, автоматическая, механическая)", 
    "color":"Цвет автомобиля",
    "odometer_value": "Пробег автомобиля (в километрах или милях)", 	
    "year_produced":"Год выпуска автомобиля" ,	
    "engine_fuel": "Тип топлива, используемого двигателем (например, бензин, дизель, электричество)",
    "engine_has_gas":	"Наличие газового оборудования (булевый флаг: True/False)", 
    "engine_type": "Тип двигателя (например, бензиновый, дизельный, гибридный)", 
    "engine_capacity"	: "Объем двигателя (в литрах или кубических сантиметрах)",
    "body_type":"Тип кузова (например, седан, хэтчбек, внедорожник)" ,	
    "has_warranty": "Наличие гарантии на автомобиль (булевый флаг: True/False)", 	
    "state": "Состояние автомобиля (например, новый, б/у)" ,
    "drivetrain": "Тип привода (например, передний, задний, полный)", 
    "price_usd": "Цена автомобиля в долларах США", 
    "is_exchangeable": "Возможность обмена автомобиля (булевый флаг: True/False)", 
    "location_region": "Регион, где находится автомобиль",
    "number_of_photos": "Количество фотографий автомобиля в объявлении" ,
    "up_counter": "Количество поднятий объявления (например, для повышения его видимости)" ,
    "feature_0": "Дополнительная характеристика автомобиля (например, наличие кондиционера)" ,
    "feature_1": "Дополнительная характеристика автомобиля (например, наличие подогрева сидений)" ,
    "feature_2": "Дополнительная характеристика автомобиля (например, наличие парктроника)" ,
    "feature_3": "Дополнительная характеристика автомобиля (например, наличие камеры заднего вида)" ,
    "feature_4": "Дополнительная характеристика автомобиля (например, наличие круиз-контроля)" ,
    "feature_5": "Дополнительная характеристика автомобиля (например, наличие мультимедийной системы)" ,
    "feature_6": "Дополнительная характеристика автомобиля (например, наличие кожаного салона)" ,
    "feature_7": "Дополнительная характеристика автомобиля (например, наличие люка)" ,
    "feature_8": "Дополнительная характеристика автомобиля (например, наличие системы старт-стоп)" ,
    "feature_9": "Дополнительная характеристика автомобиля (например, наличие системы автоматической парковки)",
    "duration_listed": "Продолжительность размещения объявления (в днях)" 
}

st.subheader(" Признаки и их описание:")
for feature, desc in data_description.items():
    st.markdown(f"**{feature}**: {desc}")

st.subheader(" Целевая переменная")
st.markdown("price_usd  — ценна машины в долларах США.")

st.subheader(" Тип задачи")
st.markdown("Задача регрессии: предсказание непрерывной числовой величины — стоимости автомобиля.")

st.write(f"Количество признаков: {len(data_description)}")

st.markdown("---")

st.header("Этапы предобработки данных (EDA)")
st.markdown("""
**Обработать пропущенные значения**
- 10 пропусков в engine_capacity - можно удалить

**Изменение типа данных:**
- Поля manufacturer_name, model_name, transmission, color, engine_fuel, engine_type, body_type, state, drivetrain, location_region - категориальные надо перевести в числовые значения методом One-Hot

**Редактирование данных:**
 - Создан признак "Возраст машины"
 - Создаем признак "Количество объявлений в регионе"

**Удаление выбросов:**
- Определили нижний и верхний пределы выбросов и сохранили их в отдельном DataFrame.

""")
